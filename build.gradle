buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'

apply plugin: "jacoco"


jar {
    baseName = 'fashionfrau-rest'
    version = '0.1.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

ext {
    jInstagramVersion = '1.1.9'
    jjwtVersion = '0.7.0'
    junitVersion = '4.12'
}

dependencies {

    compile("org.springframework.boot:spring-boot-starter-web")

    compile("org.springframework.boot:spring-boot-devtools")

    compile("org.springframework.boot:spring-boot-starter-jersey")

    compile("com.sachinhandiekar:jInstagram:${jInstagramVersion}")

    compile("org.springframework.boot:spring-boot-starter-security")

    compile("io.jsonwebtoken:jjwt:${jjwtVersion}")

    compile group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '4.10'

    testCompile('org.springframework.boot:spring-boot-starter-test')

    testCompile("junit:junit:${junitVersion}")

    testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
}

mainClassName = 'com.fashionfrau.Application'

jacoco {
    applyTo run
}

task applicationCodeCoverageReport(type:JacocoReport){
    executionData run
    sourceSets sourceSets.main
}

jacocoTestReport {
    group = "Reporting"
    description = "Generates Jacoco coverage reports for unit tests"
    executionData = files('build/jacoco/unitTest.exec')

    reports {
        xml.enabled false
        csv.enabled false
        html.destination = 'build/reports/coverage'
    }
}
